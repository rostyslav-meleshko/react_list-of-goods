{"version":3,"sources":["App.js","index.js"],"names":["goodsFromServer","App","state","isStarted","goods","goodLength","toggleStart","setState","reverse","handleChange","event","target","value","reset","sortAsc","name","sort","a","b","localeCompare","length","this","className","type","onClick","filter","el","map","good","key","onChange","React","Component","ReactDOM","render","document","getElementById"],"mappings":"oOAGMA,G,MAAkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,WA0HaC,E,4MAtHbC,MAAQ,CACNC,WAAW,EACXC,MAAM,GAAD,OAAMJ,GACXK,WAAY,G,EAGdC,YAAc,WACZ,EAAKC,UAAS,SAAAL,GAAK,MAAK,CACtBC,WAAYD,EAAMC,e,EAItBK,QAAU,WACR,EAAKD,UAAS,SAAAL,GAAK,MAAK,CACtBE,MAAO,YAAIF,EAAME,OAAOI,e,EAI5BC,aAAe,SAACC,GACd,EAAKH,SAAU,CAAEF,WAAYK,EAAMC,OAAOC,S,EAG5CC,MAAQ,WACN,EAAKN,UAAS,iBAAO,CACnBH,MAAM,GAAD,OAAMJ,GACXK,WAAY,O,EAIhBS,QAAU,YAAiB,IACjBC,EADgB,EAAbJ,OACHI,KAER,EAAKR,UAAS,SAAAL,GAAK,MAAK,CAAEE,MAAOF,EAAME,MAAMY,MAAK,SAACC,EAAGC,GACpD,OAAQH,GACN,IAAK,SACH,OAAOE,EAAEE,cAAcD,GAEzB,IAAK,SACH,OAAOD,EAAEG,OAASF,EAAEE,OAEtB,QACE,OAAO,W,4CAKf,WAAU,IAAD,SAGHC,KAAKnB,MADPE,EAFK,EAELA,MAAOD,EAFF,EAEEA,UAAWE,EAFb,EAEaA,WAKpB,OACE,yBAAKiB,UAAU,OACb,4BACEC,KAAK,SACLC,QAASH,KAAKf,YACdgB,UAAWnB,EAAY,SAAW,MAHpC,SAOCA,GACC,8BACE,8CAEGC,EAAMgB,QAAU,GAEnB,4BACGhB,EAAMqB,QAAO,SAAAC,GAAE,OAAIA,EAAGN,QAAUf,KAC9BsB,KAAI,SAAAC,GAAI,OAAI,wBAAIC,IAAKD,GAAOA,OAEjC,4BACEL,KAAK,SACLC,QAASH,KAAKb,SAFhB,WAMA,4BACEe,KAAK,SACLR,KAAK,SACLS,QAAS,SAAAd,GAAK,OAAI,EAAKI,QAAQJ,KAHjC,uBAOA,4BACEa,KAAK,SACLR,KAAK,SACLS,QAAS,SAAAd,GAAK,OAAI,EAAKI,QAAQJ,KAHjC,kBAOA,4BACEa,KAAK,SACLC,QAASH,KAAKR,OAFhB,SAMA,6BACA,sEACA,4BACEE,KAAK,aACLH,MAAOP,EACPyB,SAAUT,KAAKZ,cApDH,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAsDzBkB,KAAI,SAAAD,GAAE,OACnB,4BAAQd,MAAOc,GACZA,a,GA5GDK,IAAMC,WCZxBC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.e58b7a26.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nclass App extends React.Component {\n  state = {\n    isStarted: false,\n    goods: [...goodsFromServer],\n    goodLength: 1,\n  }\n\n  toggleStart = () => {\n    this.setState(state => ({\n      isStarted: !state.isStarted,\n    }));\n  }\n\n  reverse = () => {\n    this.setState(state => ({\n      goods: [...state.goods].reverse(),\n    }));\n  }\n\n  handleChange = (event) => {\n    this.setState(({ goodLength: event.target.value }));\n  }\n\n  reset = () => {\n    this.setState(() => ({\n      goods: [...goodsFromServer],\n      goodLength: 1,\n    }));\n  }\n\n  sortAsc = ({ target }) => {\n    const { name } = target;\n\n    this.setState(state => ({ goods: state.goods.sort((a, b) => {\n      switch (name) {\n        case 'string':\n          return a.localeCompare(b);\n\n        case 'number':\n          return a.length - b.length;\n\n        default:\n          return 0;\n      }\n    }) }));\n  }\n\n  render() {\n    const {\n      goods, isStarted, goodLength,\n    } = this.state;\n\n    const lengthOptions = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n\n    return (\n      <div className=\"App\">\n        <button\n          type=\"button\"\n          onClick={this.toggleStart}\n          className={isStarted ? 'hidden' : null}\n        >\n          Start\n        </button>\n        {isStarted && (\n          <span>\n            <h1>\n              Goods List:&nbsp;\n              {goods.length || 0}\n            </h1>\n            <ul>\n              {goods.filter(el => el.length >= goodLength)\n                .map(good => <li key={good}>{good}</li>)}\n            </ul>\n            <button\n              type=\"button\"\n              onClick={this.reverse}\n            >\n              Reverse\n            </button>\n            <button\n              type=\"button\"\n              name=\"string\"\n              onClick={event => this.sortAsc(event)}\n            >\n              Sort alphabetically\n            </button>\n            <button\n              type=\"button\"\n              name=\"number\"\n              onClick={event => this.sortAsc(event)}\n            >\n              Sort by length\n            </button>\n            <button\n              type=\"button\"\n              onClick={this.reset}\n            >\n              Reset\n            </button>\n            <hr />\n            <span>Set good&#39;s name length for filter : </span>\n            <select\n              name=\"goodLength\"\n              value={goodLength}\n              onChange={this.handleChange}\n            >\n              {lengthOptions.map(el => (\n                <option value={el}>\n                  {el}\n                </option>\n              ))}\n            </select>\n          </span>\n        ) }\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}